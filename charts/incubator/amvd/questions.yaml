# Include{groups}
portals: {}
questions:
# Include{global}
# Include{controller}
# Include{replicas}
# Include{replica1}
# Include{controllerExpertExtraArgs}
  - variable: env
    group: "App Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: AUTOSTART
          label: "AUTOSTART"
          description: "true = Enabled  Runs script automatically on startup"
          schema:
            type: string
            default: ""
        - variable: SCRIPTINTERVAL
          label: "SCRIPTINTERVAL"
          description: "#s or #m or #h or #d  s = seconds, m = minutes, h = hours, d = days  Amount of time between each script run, when AUTOSTART is enabled"
          schema:
            type: string
            default: ""
        - variable: MBRAINZMIRROR
          label: "MBRAINZMIRROR"
          description: "OPTIONAL Only change if using a different mirror"
          schema:
            type: string
            default: ""
        - variable: MBRATELIMIT
          label: "MBRATELIMIT"
          description: "OPTIONAL musicbrainz rate limit, musicbrainz allows only 1 connection per second, max setting is 10"
          schema:
            type: string
            default: ""
        - variable: SOURCE_CONNECTION
          label: "SOURCE_CONNECTION"
          description: "lidarr or ama  ama requires the AMA config folder to be mounted as a volume ama"
          schema:
            type: string
            default: ""
        - variable: LidarrUrl
          label: "LidarrUrl"
          description: "Set domain or IP to your Lidarr instance including port. If using reverse proxy, do not use a trailing slash. Ensure you specify https."
          schema:
            type: string
            default: ""
        - variable: LidarrAPIkey
          label: "LidarrAPIkey"
          description: "Lidarr API key"
          schema:
            type: string
            default: ""
        - variable: CountryCode
          label: "CountryCode"
          description: "Set the country code for preferred video matching, uses Musicbrainz Country Codes, lowercase only."
          schema:
            type: string
            default: ""
        - variable: subtitlelanguage
          label: "subtitlelanguage"
          description: "Desired Language Code  For guidence, please see youtube-dl documentation"
          schema:
            type: string
            default: ""
        - variable: WriteNFOs
          label: "WriteNFOs"
          description: "true = enabled  Create NFO and Local Thumbnail for use in applications such as Kodi"
          schema:
            type: string
            default: ""
        - variable: USEFOLDERS
          label: "USEFOLDERS"
          description: "true = enabled  Creates subfolders using the Lidarr Artist folder name"
          schema:
            type: string
            default: ""
        - variable: USEVIDEOFOLDERS
          label: "USEVIDEOFOLDERS"
          description: "true = enabled  Creates subfolders using Video File Name only, requires USEFOLDERS to be enabled"
          schema:
            type: string
            default: ""
# Include{serviceExpertRoot}
            default: false
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: config
          label: "config Storage"
          description: "Container Path config"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: hostpathfordownloads-amvd
          label: "hostpathfordownloads-amvd Storage"
          description: "Container Path downloads-amvd"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{security}
# Include{securityContextAdvancedRoot}
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{podSecurityContextRoot}
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{vpn}
# Include{documentation}
