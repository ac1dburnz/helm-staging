# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{controller}
# Include{replicas}
# Include{replica1}
# Include{controllerExpertExtraArgs}
  - variable: owntracks
    group: App Configuration
    label: OwnTracks Configuration
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: otr_host
          label: MQTT OTR Host
          description: Set the MQTT host URL or IP. For example <mosquitto.ix-mosquitto.svc.local>.
          schema:
            type: string
            default: ""
        - variable: otr_port
          label: OTR MQTT Port
          description: Set to the port that your MQTT uses.
          schema:
            type: int
            default: 1883
        - variable: otr_user
          label: OTR MQTT User
          description: Set to the user that your MQTT uses.
          schema:
            type: string
            default: ""
        - variable: otr_pass
          label: OTR MQTT Password
          description: Set to the password that your MQTT uses.
          schema:
            type: string
            private: true
            default: ""
        - variable: otr_precision
          label: OTR Precision
          description: Reverse-geo precision
          schema:
            type: int
            default: 7
        - variable: otr_geokey
          label: OTR Geo Key
          description: API key for reverse-geo lookups
          schema:
            type: string
            private: true
            default: ""
        - variable: otr_browserapikey
          label: OTR Browser API Key
          description: Google maps browser API key
          schema:
            type: string
            private: true
            default: ""
        - variable: otr_serverlabel
          label: OTR Server Label
          description: Server label for Web
          schema:
            type: string
            required: true
            default: OwnTracks
        - variable: otr_lmdbsize
          label: OTR LMBD Size
          description: Size of the LMDB database. If less than 10485760 (10 MB) it will be set to 10485760.
          schema:
            type: int
            required: true
            default: 104857600000
# Include{containerConfig}
# Include{serviceRoot}
        - variable: main
          label: Main Service
          description: The Primary service on which the healthcheck runs, often the webUI
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: Main Service Port Configuration
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: Port
                            description: This port exposes the container port on the service
                            schema:
                              type: int
                              default: 8083
                              required: true
# Include{serviceExpertRoot}
            default: false
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: store
          label: App Storage
          description: Stores the location data.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: Main Ingress
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressList}
# Include{security}
# Include{securityContextAdvancedRoot}
              - variable: privileged
                label: Privileged mode
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: ReadOnly Root Filesystem
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: Allow Privilege Escalation
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: runAsNonRoot
                schema:
                  type: boolean
                  default: true
# Include{podSecurityContextRoot}
        - variable: runAsUser
          label: runAsUser
          description: The UserID of the user running the application
          schema:
            type: int
            default: 568
        - variable: runAsGroup
          label: runAsGroup
          description: The groupID this App of the user running the application
          schema:
            type: int
            default: 568
        - variable: fsGroup
          label: fsGroup
          description: The group that should own ALL storage.
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{vpn}
# Include{documentation}
