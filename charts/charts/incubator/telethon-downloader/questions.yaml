# Include{groups}
portals: {}
questions:
# Include{global}
# Include{controller}
# Include{replicas}
# Include{replica1}
# Include{controllerExpertExtraArgs}
  - variable: env
    group: "App Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: TG_AUTHORIZED_USER_ID
          label: "TG_AUTHORIZED_USER_ID"
          description: "Container Variable TGAUTHORIZEDUSERID"
          schema:
            type: string
            default: " "
        - variable: TG_API_ID
          label: "TG_API_ID"
          description: "Container Variable TGAPIID"
          schema:
            type: string
            default: " "
        - variable: TG_API_HASH
          label: "TG_API_HASH"
          description: "Container Variable TGAPIHASH"
          schema:
            type: string
            default: " "
        - variable: TG_BOT_TOKEN
          label: "TG_BOT_TOKEN"
          description: "Container Variable TGBOTTOKEN"
          schema:
            type: string
            default: ""
        - variable: TG_PROGRESS_DOWNLOAD
          label: "TG_PROGRESS_DOWNLOAD"
          description: "Container Variable TGPROGRESSDOWNLOAD"
          schema:
            type: string
            default: ""
# Include{serviceExpertRoot}
            default: false
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: pathdownload
          label: "pathdownload Storage"
          description: "Container Path download"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: pathwatch
          label: "pathwatch Storage"
          description: "Container Path watch"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: config
          label: "config Storage"
          description: "Container Path config"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{security}
# Include{securityContextAdvancedRoot}
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{podSecurityContextRoot}
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{vpn}
# Include{documentation}
